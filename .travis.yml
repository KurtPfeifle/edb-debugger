language: cpp

cache: apt

compiler:
    - gcc

env:
    global:
        - MAKEFLAGS="-j2"
    matrix:
        - QT_BASE=48
        - QT_BASE=51
        - QT_BASE=52
        - QT_BASE=53
        - QT_BASE=54
        - QT_BASE=55
        - QT_BASE=56

sudo: required

before_install:
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90
    - if [ "$QT_BASE" = "50" ] ; then sudo add-apt-repository ppa:beineri/opt-qt502-trusty -y ; fi
    - if [ "$QT_BASE" = "51" ] ; then sudo add-apt-repository ppa:beineri/opt-qt511-trusty -y ; fi
    - if [ "$QT_BASE" = "52" ] ; then sudo add-apt-repository ppa:beineri/opt-qt521-trusty -y ; fi
    - if [ "$QT_BASE" = "53" ] ; then sudo add-apt-repository ppa:beineri/opt-qt532-trusty -y ; fi
    - if [ "$QT_BASE" = "54" ] ; then sudo add-apt-repository ppa:beineri/opt-qt542-trusty -y ; fi
    - if [ "$QT_BASE" = "55" ] ; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty -y ; fi
    - if [ "$QT_BASE" = "56" ] ; then sudo add-apt-repository ppa:beineri/opt-qt562-trusty -y ; fi
    - sudo add-apt-repository ppa:ximion/packagekit -y
    - sudo apt-get update -qq
    - ./travis_install_capstone.sh

install:
    - if [ "$QT_BASE" = "48" ] ; then sudo apt-get install -qq qt4-qmake libqt4-gui libqt4-core libqt4-dev ; fi
    - if [ "$QT_BASE" = "50" ] ; then sudo apt-get install -qq qtbase  qtxmlpatterns qtsvg; source /opt/qt5/bin/qt5-env.sh ; fi
    - if [ "$QT_BASE" = "51" ] ; then sudo apt-get install -qq qt51base qt51xmlpatterns qt51svg; source /opt/qt51/bin/qt51-env.sh ; fi
    - if [ "$QT_BASE" = "52" ] ; then sudo apt-get install -qq qt52base qt52xmlpatterns qt52svg; source /opt/qt52/bin/qt52-env.sh ; fi
    - if [ "$QT_BASE" = "53" ] ; then sudo apt-get install -qq qt53base qt53xmlpatterns qt53svg; source /opt/qt53/bin/qt53-env.sh ; fi
    - if [ "$QT_BASE" = "54" ] ; then sudo apt-get install -qq qt54base qt54xmlpatterns qt54svg; source /opt/qt54/bin/qt54-env.sh ; fi
    - if [ "$QT_BASE" = "55" ] ; then sudo apt-get install -qq qt55base qt55xmlpatterns qt55svg; source /opt/qt55/bin/qt55-env.sh ; fi
    - if [ "$QT_BASE" = "56" ] ; then sudo apt-get install -qq qt56base qt56xmlpatterns qt56svg; source /opt/qt56/bin/qt56-env.sh ; fi
    - sudo apt-get -y install appstream

before_script:
    - if [ "$QT_BASE" == "48" ] ; then mkdir build && cd build && CXX=g++-5 CC=gcc-5 cmake -DQT_VERSION=Qt4 .. ; fi
    - if [ "$QT_BASE" != "48" ] ; then mkdir build && cd build && CXX=g++-5 CC=gcc-5 cmake -DQT_VERSION=Qt5 .. ; fi

script:
    - make

after_success:
    - pwd
    - cd ..
    - find . -type d
    - find . -name "*.desktop"
    - find . -name "edb.png"
    - # Generate AppImage
    - mkdir -p ./appdir/usr/local/share/applications/ ; cp ./appimage/edb.desktop ./appdir/usr/local/share/applications/
    - mkdir -p ./appdir/usr/local/share/icons/hicolor/512x512/apps/ ; cp ./appimage/edb.png  ./appdir/usr/local/share/icons/hicolor/512x512/apps/
    - mkdir -p ./appdir/usr/local/share/metainfo/ ; cp ./appimage/edb.appdata.xml  ./appdir/usr/local/share/metainfo/
    - find ./appdir -type d
    - find ./appdir -type f
    - ls -l ./appdir
    - cd ./build
    - readlink -f ../appdir
    - make install DESTDIR=$(readlink -f ../appdir)
    - cd ..
    - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
    - chmod a+x linuxdeployqt*.AppImage
    - unset QTDIR ; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
    - export VERSION=$(git rev-parse --short HEAD)-$CC
    - ./linuxdeployqt*.AppImage ./appdir/usr/local/bin/edb -bundle-non-qt-libs
    - ./linuxdeployqt*.AppImage --appimage-extract
    - find ./squashfs-root -name appimagetool
    - ls -1d */
    - find . -type d
    - find . -name "*.AppImage"
    #- rm ./appdir/AppRun ; cp appimage/AppRun appdir/ ; chmod a+x ./appdir/AppRun # Replace symlink with custom script
    - PATH=./squashfs-root/usr/bin:$PATH ./squashfs-root/usr/bin/appimagetool -v -u 'gh-releases-zsync|KurtPfeifle|edb-debugger|continuous|edb-*x86_64.AppImage.zsync' ./appdir/
    - find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
    - find . -name "edb*.AppImage"
    - mv ./edb*.AppImage ./edb-xperimental-x86_64.AppImage
    - cp ./edb-xperimental{,-$(git rev-parse --short HEAD)}-x86_64.AppImage
    - sha512sum ./edb-xperimental-$(git rev-parse --short HEAD)-x86_64.AppImage > ./edb-xperimental-$(git rev-parse --short HEAD)-x86_64.AppImage.sha512
    - sha512sum ./edb-xperimental-x86_64.AppImage                               > ./edb-xperimental-x86_64.AppImage.sha512
    - find . -name "*.AppImage*"
    - #if [ "$TRAVIS_BRANCH" == "TRAVIS_TAG" ] ; then
    - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
    - bash upload.sh edb-xperimental-x86_64.AppImage
    - bash upload.sh edb-xperimental-x86_64.AppImage.sha512
    - bash upload.sh edb-xperimental-$(git rev-parse --short HEAD)-x86_64.AppImage
    - bash upload.sh edb-xperimental-$(git rev-parse --short HEAD)-x86_64.AppImage.sha512
    - bash upload.sh edb-$(git rev-parse --short HEAD)-gcc-x86_64.AppImage.zsync
    - #; fi
    - #if [ "$TRAVIS_BRANCH" != "TRAVIS_TAG" ] ; then
    - curl --upload-file ./edb-xperimental-$(git rev-parse --short HEAD)-x86_64.AppImage  https://transfer.sh/edb-xperimental-$(git rev-parse --short HEAD)-x86_64.AppImage
    - curl --upload-file ./edb-xperimental-x86_64.AppImage                                https://transfer.sh/edb-xperimental-x86_64.AppImage
    - #; fi
    - find . -name "edb-*.AppImage*"

      #- cp ./src/images/edb.png ./build
      #- cp ./edb.desktop ./build
      #- rm -rf build/src
      #- wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
      #- chmod a+x linuxdeployqt-continuous-x86_64.AppImage
      #- unset LD_LIBRARY_PATH
      #- ./linuxdeployqt-continuous-x86_64.AppImage ./build/edb -appimage -verbose=2
      #- find . -name "*.AppImage*"
      #- ls edb*.AppImage*
      #- mv $(ls edb*.AppImage) ./build/edb-qt$QT_BASE-continuous-git.$(git rev-parse --short HEAD)-x86_64.AppImage
      #- curl --upload-file $(ls ./build/edb*.AppImage) https://transfer.sh/edb-qt$QT_BASE-continuous-git.$(git rev-parse --short HEAD)-x86_64.AppImage # Replace with your deployment mechanism
      #- wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
      #- bash upload.sh ./build/edb-qt$QT_BASE-continuous-git.$(git rev-parse --short HEAD)-x86_64.AppImage  # Needs Travis token of @eteran!
      #- bash upload.sh ./build/edb-qt$QT_BASE-continuous-git.$(git rev-parse --short HEAD)-x86_64.AppImage.zsync


branches:
    only:
        - master
        - patch-1

os:
    - linux

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - build-essential
            - libboost-dev
            - gcc-5
            - g++-5
            - cmake3
